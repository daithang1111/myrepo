<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>tn.myrepo</groupId>
	<artifactId>myrepo</artifactId>
	<packaging>jar</packaging>
	<version>0.1.0-SNAPSHOT</version>
	<name>myrepo</name>
	<description>My library of utilities to work with text</description>
	<url>https://github.com/daithang1111/myrepo</url>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git@github.com:daithang1111/myrepo.git</connection>
		<developerConnection>scm:git:git@github.com:daithang1111/myrepo.git</developerConnection>
		<url>git@github.com:daithang1111/myrepo.git</url>
	</scm>

	<developers>
		<developer>
			<id>daithang1111</id>
			<name>Thang Nguyen</name>
			<email>daithang@umiacs.umd.edu</email>
		</developer>
	</developers>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<hadoop.version2>2.0.0-cdh4.4.0</hadoop.version2>
		<junit.version>4.11</junit.version>
		<jdk.version>1.7</jdk.version>
		<jackson.version>1.9.13</jackson.version>
		<sqlite.version>3.7.2</sqlite.version>
		<cloud9.version>1.4.17</cloud9.version>
		<pig.version>0.12.1</pig.version>
		<mallet.version>2.0.7</mallet.version>
		<trove4j.version>3.0.3</trove4j.version>
		<log4j.version>1.2.16</log4j.version>
		<colt.version>1.2.0</colt.version>
		<boilerpipe.version>1.2.2</boilerpipe.version>
		<nekohtml.version>1.9.21</nekohtml.version>
		<xercesImpl.version>2.11.0</xercesImpl.version>
		<commons-codec.version>1.8</commons-codec.version>
		<jsoup.version>1.7.3</jsoup.version>
		<weka-dev.version>3.7.6</weka-dev.version>
		<stanford-corenlp.version>3.3.1</stanford-corenlp.version>
		<lucene.version>4.5.1</lucene.version>
		<mulan.version>1.4.0</mulan.version>
		<commons-math3.version>3.3</commons-math3.version>

	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>

							<!-- This fits the issue "Invalid signature file digest for Manifest 
								main attributes" cf. http://zhentao-li.blogspot.com/2012/06/maven-shade-plugin-invalid-signature.html -->
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>

							<!-- this will create both a normal thin jar and also a fatjar -->
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>fatjar</shadedClassifierName>
							<artifactSet>
								<excludes>
									<exclude>org.apache.hadoop:*</exclude>
								</excludes>
							</artifactSet>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.3.1</version>
				<configuration>
					<extraJvmArguments>-Xms512M -Xmx24576M</extraJvmArguments>
					<programs>
						<program>
							<mainClass>tn.classification.data.codebook.ProcessCodeBook</mainClass>
							<name>ProcessCodeBook</name>
						</program>
						<program>
							<mainClass>tn.classification.data.GenerateUnlabeledArff</mainClass>
							<name>GenerateUnlabeledArff</name>
						</program>
						<program>
							<mainClass>tn.classification.data.GenerateLabeledArff</mainClass>
							<name>GenerateLabeledArff</name>
						</program>
						<program>
							<mainClass>tn.classification.classify.ClassifyMultiLabel</mainClass>
							<name>ClassifyMultiLabel</name>
						</program>
						<program>
							<mainClass>tn.classification.classify.PredictMultiLabel</mainClass>
							<name>PredictMultiLabel</name>
						</program>
						<program>
							<mainClass>tn.classification.classify.PredictMultiClass</mainClass>
							<name>PredictMultiClass</name>
						</program>
						<program>
							<mainClass>tn.topicmodel.data.press.ProcessPressRelease</mainClass>
							<name>ProcessPressRelease</name>
						</program>
						<program>
							<mainClass>tn.topicmodel.data.press.TruncatePressRelease</mainClass>
							<name>TruncatePressRelease</name>
						</program>
						<program>
							<mainClass>tn.topicmodel.data.press.ReadPressReleaseZipFile</mainClass>
							<name>ReadPressReleaseZipFile</name>
						</program>
						<program>
							<mainClass>tn.database.sqlite.InsertDataIntoTable</mainClass>
							<name>InsertDataIntoTable</name>
						</program>
						<program>
							<mainClass>tn.database.sqlite.RunSqlScript</mainClass>
							<name>RunSqlScript</name>
						</program>
						<!-- preprocess -->
						<program>
							<mainClass>tn.data.preprocess.ConvertToMrldaFormat</mainClass>
							<name>ConvertToMrldaFormat</name>
						</program>
						<program>
							<mainClass>tn.data.preprocess.PreprocessData</mainClass>
							<name>PreprocessData</name>
						</program>
						<program>
							<mainClass>tn.data.preprocess.TruncateByDocumentFrequency</mainClass>
							<name>TruncateByDocumentFrequency</name>
						</program>
						<!-- Mrlda -->
						<program>
							<mainClass>tn.topicmodel.data.mrlda.ConvertMrldaBetaToBeta</mainClass>
							<name>ConvertMrldaBetaToBeta</name>
						</program>
						<program>
							<mainClass>tn.topicmodel.data.mrlda.ConvertMrldaTopicToTopic</mainClass>
							<name>ConvertMrldaTopicToTopic</name>
						</program>
						<program>
							<mainClass>tn.topicmodel.data.mrlda.GenTopicResult</mainClass>
							<name>GenTopicResult</name>
						</program>
						<program>
							<mainClass>tn.topicmodel.data.press.GenTestCorpusBasedOnPressRelease</mainClass>
							<name>GenTestCorpusBasedOnPressRelease</name>
						</program>
						<program>
							<mainClass>tn.classification.data.codebook.GenCodeBookTopicWord</mainClass>
							<name>GenCodeBookTopicWord</name>
						</program>
						<program>
							<mainClass>tn.data.preprocess.GenVocab</mainClass>
							<name>GenVocab</name>
						</program>
						<program>
							<mainClass>tn.topicmodel.data.press.GenTestCorpusBasedOnTabFormat</mainClass>
							<name>GenTestCorpusBasedOnTabFormat</name>
						</program>
						<program>
							<mainClass>tn.topicmodel.data.press.GenTestCorpusBasedOnWarcbaseData</mainClass>
							<name>GenTestCorpusBasedOnWarcbaseData</name>
						</program>
						<program>
							<mainClass>tn.classification.classify.PredictMultiClassSMO</mainClass>
							<name>PredictMultiClassSMO</name>
						</program>		
						<program>
							<mainClass>tn.classification.classify.PredictMultiClassTree</mainClass>
							<name>PredictMultiClassTree</name>
						</program>		
						<program>
							<mainClass>tn.classification.classify.PredictMultiClassLogistic</mainClass>
							<name>PredictMultiClassLogistic</name>
						</program>		
					</programs>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>cloudera</id>
			<url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
		</repository>
		<repository>
			<id>maven</id>
			<url>http://repo.maven.apache.org/maven2/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Begin: Hadoop-related dependencies -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>${hadoop.version2}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>${hadoop.version2}</version>
		</dependency>
		<!-- End: Hadoop-related dependencies -->

		<dependency>
			<groupId>edu.umd</groupId>
			<artifactId>cloud9</artifactId>
			<version>${cloud9.version}</version>
		</dependency>

		<!-- Needed for ReadSequenceFiles -->
		<dependency>
			<groupId>org.apache.pig</groupId>
			<artifactId>pig</artifactId>
			<version>${pig.version}</version>
		</dependency>

		<dependency>
			<groupId>cc.mallet</groupId>
			<artifactId>mallet</artifactId>
			<version>${mallet.version}</version>
		</dependency>

		<dependency>
			<groupId>net.sf.trove4j</groupId>
			<artifactId>trove4j</artifactId>
			<version>${trove4j.version}</version>
		</dependency>

		<dependency>
			<groupId>colt</groupId>
			<artifactId>colt</artifactId>
			<version>${colt.version}</version>
		</dependency>

		<dependency>
			<groupId>com.syncthemall</groupId>
			<artifactId>boilerpipe</artifactId>
			<version>${boilerpipe.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.nekohtml</groupId>
			<artifactId>nekohtml</artifactId>
			<version>${nekohtml.version}</version>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>${xercesImpl.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>

		<dependency>
			<groupId>nz.ac.waikato.cms.weka</groupId>
			<artifactId>weka-dev</artifactId>
			<version>${weka-dev.version}</version>
		</dependency>

		<dependency>
			<groupId>edu.stanford.nlp</groupId>
			<artifactId>stanford-corenlp</artifactId>
			<version>${stanford-corenlp.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
			<version>${lucene.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers-common</artifactId>
			<version>${lucene.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>${lucene.version}</version>
		</dependency>

		<dependency>
			<groupId>net.sf.meka.thirdparty</groupId>
			<artifactId>mulan</artifactId>
			<version>${mulan.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>${commons-math3.version}</version>
		</dependency>
		<!-- Jackson -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!-- Sqlite -->
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>${sqlite.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>
</project>
